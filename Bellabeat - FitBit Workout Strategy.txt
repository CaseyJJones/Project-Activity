-- Organizing Id Count

SELECT COUNT (DISTINCT Id) AS activity_id_count
FROM `bellabeat-capstone-367917.367917.activity`;


-- looking for null cells in files to be used

SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE TotalSteps is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE TotalDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE TrackerDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE LoggedActivitiesDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE VeryActiveDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE ModeratelyActiveDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE LightActiveDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE LightActiveDistance is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE VeryActiveMinutes is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE FairlyActiveMinutes is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE LightlyActiveMinutes is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE SedentaryMinutes is NULL
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
WHERE Calories is NULL
;


-- Looking for outliers
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
ORDER BY TotalSteps desc
;
SELECT *
FROM `bellabeat-capstone-367917.367917.activity`
ORDER BY TotalSteps asc
;

-- Searching for Duplicates

SELECT Id,
ActivityDate, 
TotalSteps, 
TotalDistance, 
TrackerDistance, 
LoggedActivitiesDistance, 
VeryActiveDistance, 
ModeratelyActiveDistance, 
LightActiveDistance, 
SedentaryActiveDistance, 
VeryActiveMinutes, 
FairlyActiveMinutes, 
LightlyActiveMinutes, 
SedentaryMinutes
FROM `bellabeat-capstone-367917.367917.activity`
GROUP BY Id,
ActivityDate, 
TotalSteps, 
TotalDistance, 
TrackerDistance, 
LoggedActivitiesDistance, 
VeryActiveDistance, 
ModeratelyActiveDistance, 
LightActiveDistance, 
SedentaryActiveDistance, 
VeryActiveMinutes, 
FairlyActiveMinutes, 
LightlyActiveMinutes, 
SedentaryMinutes
HAVING COUNT(id) >1;
## "There is no data to display"


--------------------------------------------------------------------------------------------------------
-- Looking for days that may not have shown any activity
SELECT *
FROM `bellabeat-capstone-367917.367917.activity` 
WHERE Calories = 0;
##We find 4 days from 4 different users registered no calories or activity, only the alloted sedentary active minutes 1440 which means the fitbit did not move


-- We are looking to see if there were days the fitbit was not on at all. 33 users with 31 days should have 1023 dates logged
SELECT COUNT(Id) AS Total_Number_of_IDs_Logged,
COUNT(ActivityDate) AS Total_Dates_Logged,
COUNT(DISTINCT Id) AS Disctinct_Number_of_Ids,
COUNT(DISTINCT ActivityDate) AS Distinct_Number_of_Days
FROM `bellabeat-capstone-367917.367917.activity`;
## We find that only 940 of the 1023 days were logged so the Number of days logged affects averages. 

-- We need to know how many days each participant logged
SELECT Id,
COUNT(*) AS Number_of_Days_Logged
FROM `bellabeat-capstone-367917.367917.activity` As Activity_Dates_Counted_for_Id_Logs
GROUP BY Id
ORDER BY COUNT(*);
## We can see that 12 logged under the 31 day mark which was the complete length of the series

-- We need to know the Averages of each participant, which we will find by their activity divided by the number of days they particpated
SELECT ARRAY_AGG(DISTINCT ActivitySummaryAveraged.Id) AS Identification,
ARRAY_AGG(DISTINCT Number_of_Days_Logged) AS LoggedTotals,
SUM((TotalSteps) / (Number_of_Days_Logged)) AS Steps,
SUM((TotalDistance) / (Number_of_Days_Logged))AS Distance,
SUM((TrackerDistance) / (Number_of_Days_Logged)) AS DistanceTracked,
SUM((VeryActiveDistance) / (Number_of_Days_Logged)) AS VeryActiveDistace,
SUM((ModeratelyActiveDistance) / (Number_of_Days_Logged)) AS ModeratelyActiveDistance,
SUM((LightActiveDistance) / (Number_of_Days_Logged)) AS LightActiveDistance,
SUM((SedentaryActiveDistance) / (Number_of_Days_Logged)) AS SedentaryActiveDistance,
SUM((VeryActiveMinutes) / (Number_of_Days_Logged)) AS VeryActiveMinutes,
SUM((FairlyActiveMinutes) / (Number_of_Days_Logged)) AS ModeratelyActiveMinutes,
SUM((LightlyActiveMinutes) / (Number_of_Days_Logged)) AS LightActiveMinutes,
SUM((SedentaryMinutes) /(Number_of_Days_Logged)) AS SedentaryActiveMinutes,
SUM((Calories) /(Number_of_Days_Logged)) AS Calories
FROM `bellabeat-capstone-367917.Datasets_Created.Activity_Dates_Counted_for_Id_Logs` AS ActivitySummaryAveraged
LEFT JOIN `bellabeat-capstone-367917.367917.activity`
ON `bellabeat-capstone-367917.367917.activity`.Id = ActivitySummaryAveraged.Id
GROUP BY ActivitySummaryAveraged.Id;



